# -*- coding: utf-8 -*-
"""health_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zDqtlGJqh5pftpRZzPdkKsKbibOWpehn
"""

import pandas as pd
import os

folder_path = '/content/drive/MyDrive/Colab Notebooks/health_data'
files = os.listdir(folder_path)

from google.colab import drive
drive.mount('/content/drive')

heart_rate_df = pd.read_csv(os.path.join(folder_path, 'heart_rate.csv'))
sleep_df = pd.read_csv(os.path.join(folder_path, 'sleep.csv'))
calories_df = pd.read_csv(os.path.join(folder_path, 'calories.csv'))
steps_df = pd.read_csv(os.path.join(folder_path, 'steps.csv'))

print(heart_rate_df.head())
print(sleep_df.head())
print(calories_df.head())
print(steps_df.head())

print(heart_rate_df.isnull().sum())
print(sleep_df.isnull().sum())
print(calories_df.isnull().sum())
print(steps_df.isnull().sum())

# Converting date and getting means, max and min heart rate.
heart_rate_df['time'] = pd.to_datetime(heart_rate_df['Time'], format='%m/%d/%Y %I:%M:%S %p')
heart_rate_df['date'] = heart_rate_df['time'].dt.date

daily_hr_summary = heart_rate_df.groupby(['date', 'Id'])['Value'].agg(['mean', 'max', 'min']).reset_index()

print(daily_hr_summary)

sleep_df['date'] = pd.to_datetime(sleep_df['SleepDay'], format='%m/%d/%Y %I:%M:%S %p').dt.date
sleep_df = sleep_df.drop(columns=['SleepDay'])

calories_df['date'] = pd.to_datetime(calories_df['ActivityDay'], format='%m/%d/%Y').dt.date
calories_df = calories_df.drop(columns=['ActivityDay'])

steps_df['date'] = pd.to_datetime(steps_df['ActivityDay'], format='%m/%d/%Y').dt.date
steps_df = steps_df.drop(columns=['ActivityDay'])

combined_df = pd.merge(daily_hr_summary, sleep_df, on=['date', 'Id'], suffixes=('_hr', '_sleep'))
combined_df = pd.merge(combined_df, calories_df, on=['date', 'Id'], suffixes=('', '_calories'))
combined_df = pd.merge(combined_df, steps_df, on=['date', 'Id'], suffixes=('', '_steps'))

combined_df = combined_df.drop(columns=['ActivityDay', 'ActivityDay_steps'])

print(combined_df.head())

combined_df.to_csv('combined_health_data.csv', index=False)

